import React, { useState, useRef, useEffect } from "react";
import { Music, Volume2, VolumeX, Play, Pause } from "lucide-react";
import music from "../../public/music.webm";

export default function MusicPlayer() {
  const [isPlaying, setIsPlaying] = useState(false);
  const [isMuted, setIsMuted] = useState(false);
  const [showMobileHint, setShowMobileHint] = useState(false);
  const audioRef = useRef(null);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    const savedState = localStorage.getItem("musicState");
    if (savedState === "playing" && !isMobile) {
      setIsPlaying(true);
    }
  }, [isMobile]);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ localStorage
  useEffect(() => {
    localStorage.setItem("musicState", isPlaying ? "playing" : "paused");
  }, [isPlaying]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–æ–≤
  useEffect(() => {
    if (!isMobile && isPlaying && audioRef.current) {
      audioRef.current.play().catch((error) => {
        console.log("Auto-play failed:", error);
      });
    }
  }, [isPlaying, isMobile]);

  const togglePlay = async () => {
    if (!audioRef.current) return;

    try {
      if (isPlaying) {
        audioRef.current.pause();
        setIsPlaying(false);
      } else {
        // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        if (isMobile) {
          setShowMobileHint(true);
          setTimeout(() => setShowMobileHint(false), 3000);
        }

        await audioRef.current.play();
        setIsPlaying(true);
      }
    } catch (error) {
      console.log("Audio play failed:", error);
      if (isMobile) {
        setShowMobileHint(true);
        setTimeout(() => setShowMobileHint(false), 3000);
      }
    }
  };

  const toggleMute = () => {
    if (audioRef.current) {
      audioRef.current.muted = !isMuted;
      setIsMuted(!isMuted);
    }
  };

  return (
    <div className="flex flex-col gap-3 p-4 bg-rose-900/50 rounded-2xl">
      {/* –ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç */}
      <audio ref={audioRef} loop preload="metadata" controls={false}>
        <source src={music} type="audio/webm" />
        <source src="/music/wedding-music.mp3" type="audio/mpeg" />
        –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç.
      </audio>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
      {showMobileHint && (
        <div className="bg-amber-500/90 text-white text-xs p-2 rounded-lg text-center animate-pulse">
          üéµ –ú—É–∑—ã–∫–∞–Ω—ã –±–∞—à—Ç–æ–æ “Ø—á“Ø–Ω "–ñ–∞–∑–¥—ã—Ä—É—É" –±–∞—Å–∫—ã—á—ã–Ω –±–∞—Å—ã“£—ã–∑
        </div>
      )}

      <div className="flex items-center gap-3">
        {/* –ò–∫–æ–Ω–∫–∞ –º—É–∑—ã–∫–∏ */}
        <div className="flex-shrink-0">
          <Music className="w-6 h-6 text-rose-200" />
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è/–ø–∞—É–∑—ã */}
        <button
          onClick={togglePlay}
          className="flex items-center gap-3 px-4 py-3 bg-rose-700 hover:bg-rose-600 rounded-xl transition-all duration-300 group flex-1 min-h-[48px] active:scale-95"
        >
          {isPlaying ? (
            <Pause className="w-5 h-5 text-rose-100" />
          ) : (
            <Play className="w-5 h-5 text-rose-100" />
          )}
          <span className="text-rose-100 text-sm font-medium">
            {isPlaying ? "–¢–æ–∫—Ç–æ—Ç—É—É" : "–ñ–∞–∑–¥—ã—Ä—É—É"}
          </span>
        </button>

        {/* –ö–Ω–æ–ø–∫–∞ mute/unmute */}
        <button
          onClick={toggleMute}
          className="p-3 bg-rose-800 hover:bg-rose-700 rounded-xl transition-all duration-300 group min-h-[48px] min-w-[48px] flex items-center justify-center active:scale-95"
          aria-label={isMuted ? "“Æ–Ω–¥“Ø –∫–æ—à—É—É" : "“Æ–Ω–¥“Ø ”©—á“Ø—Ä“Ø“Ø"}
        >
          {isMuted ? (
            <VolumeX className="w-5 h-5 text-rose-300" />
          ) : (
            <Volume2 className="w-5 h-5 text-rose-300" />
          )}
        </button>
      </div>

      {/* –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
      {isMobile && !showMobileHint && (
        <p className="text-rose-300/70 text-xs text-center">
          –ú—É–∑—ã–∫–∞–Ω—ã —É–≥—É—É “Ø—á“Ø–Ω "–ñ–∞–∑–¥—ã—Ä—É—É" –±–∞—Å–∫—ã—á—ã–Ω –±–∞—Å—ã“£—ã–∑
        </p>
      )}
    </div>
  );
}
